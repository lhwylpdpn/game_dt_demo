# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import card_game_pb2 as card__game__pb2

GRPC_GENERATED_VERSION = '1.69.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in card_game_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CardGameServiceStub(object):
    """===============
    gRPC 服务定义
    ===============

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadyGame = channel.unary_unary(
                '/CardGameService/ReadyGame',
                request_serializer=card__game__pb2.ReadyGameRequest.SerializeToString,
                response_deserializer=card__game__pb2.ReadyGameResponse.FromString,
                _registered_method=True)
        self.StartGame = channel.unary_unary(
                '/CardGameService/StartGame',
                request_serializer=card__game__pb2.StartGameRequest.SerializeToString,
                response_deserializer=card__game__pb2.StartGameResponse.FromString,
                _registered_method=True)
        self.PlayCard = channel.unary_unary(
                '/CardGameService/PlayCard',
                request_serializer=card__game__pb2.PlayCardRequest.SerializeToString,
                response_deserializer=card__game__pb2.PlayCardResponse.FromString,
                _registered_method=True)
        self.EndTurn = channel.unary_unary(
                '/CardGameService/EndTurn',
                request_serializer=card__game__pb2.EndTurnRequest.SerializeToString,
                response_deserializer=card__game__pb2.EndTurnResponse.FromString,
                _registered_method=True)
        self.EndGame = channel.unary_unary(
                '/CardGameService/EndGame',
                request_serializer=card__game__pb2.EndGameRequest.SerializeToString,
                response_deserializer=card__game__pb2.EndGameResponse.FromString,
                _registered_method=True)


class CardGameServiceServicer(object):
    """===============
    gRPC 服务定义
    ===============

    """

    def ReadyGame(self, request, context):
        """1. 玩家准备就绪
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGame(self, request, context):
        """2. 开始游戏
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayCard(self, request, context):
        """3. 玩家出牌
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTurn(self, request, context):
        """4. 结束回合
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndGame(self, request, context):
        """5. 结束游戏
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CardGameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadyGame': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadyGame,
                    request_deserializer=card__game__pb2.ReadyGameRequest.FromString,
                    response_serializer=card__game__pb2.ReadyGameResponse.SerializeToString,
            ),
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=card__game__pb2.StartGameRequest.FromString,
                    response_serializer=card__game__pb2.StartGameResponse.SerializeToString,
            ),
            'PlayCard': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayCard,
                    request_deserializer=card__game__pb2.PlayCardRequest.FromString,
                    response_serializer=card__game__pb2.PlayCardResponse.SerializeToString,
            ),
            'EndTurn': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTurn,
                    request_deserializer=card__game__pb2.EndTurnRequest.FromString,
                    response_serializer=card__game__pb2.EndTurnResponse.SerializeToString,
            ),
            'EndGame': grpc.unary_unary_rpc_method_handler(
                    servicer.EndGame,
                    request_deserializer=card__game__pb2.EndGameRequest.FromString,
                    response_serializer=card__game__pb2.EndGameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CardGameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CardGameService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CardGameService(object):
    """===============
    gRPC 服务定义
    ===============

    """

    @staticmethod
    def ReadyGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CardGameService/ReadyGame',
            card__game__pb2.ReadyGameRequest.SerializeToString,
            card__game__pb2.ReadyGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CardGameService/StartGame',
            card__game__pb2.StartGameRequest.SerializeToString,
            card__game__pb2.StartGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlayCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CardGameService/PlayCard',
            card__game__pb2.PlayCardRequest.SerializeToString,
            card__game__pb2.PlayCardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndTurn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CardGameService/EndTurn',
            card__game__pb2.EndTurnRequest.SerializeToString,
            card__game__pb2.EndTurnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CardGameService/EndGame',
            card__game__pb2.EndGameRequest.SerializeToString,
            card__game__pb2.EndGameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
